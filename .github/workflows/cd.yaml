name: Example pipeline
on:
 push:
   branches: 
     - master
     - develop
 pull_request:
   branches: 
     - master
     - develop
jobs:
 deploy:
   runs-on: ubuntu-latest
   environment: ${{ needs.build.outputs.env_name }}
   steps:
     - name: Checkout source php code
       uses: actions/checkout@v2
    ## Need to install zip
     - name: Instalar zip package
       id: branch_check
       run: |
         echo "Running on branch ${{ github.ref }}"
         if [ "${{ github.ref }}" = "refs/heads/master" ]; then
           echo "::set-output name=env_name::prod"
           echo "::set-output name=env_account::${{ secrets.AWS_ACCOUNT_PROD}}"
         elif [ "${{ github.ref }}" = "refs/heads/develop" ]; then
           echo "::set-output name=env_name::develop"
           echo "::set-output name=env_account::${{ secrets.AWS_ACCOUNT_DEV}}"
         else
           echo "::set-output name=env_name::qa"
           echo "::set-output name=env_account::${{ secrets.AWS_ACCOUNT_QA}}"
         fi      
    ## Crear el ZIP file
     - name: Push to s3
       run: |
         if ["${{ steps.branch_check.outputs.env_name }}" = "prod"]; then
          echo "aws s3 cp deploy-${{ github.sha }}.zip s3://${{ secrets.AWS_BUCKET_NAME }}-${{env.AWS_DEFAULT_REGION}}-${{ steps.branch_check.outputs.env_account }}/ --profile ${{ steps.branch_check.outputs.env_name }}"
         elif [ "${{ github.ref }}" = "refs/heads/develop" ]; then
          echo "aws s3 cp deploy-${{ github.sha }}.zip s3://${{ secrets.AWS_BUCKET_NAME }}-${{env.AWS_DEFAULT_REGION}}-${{ steps.branch_check.outputs.env_account }}/ --profile ${{ steps.branch_check.outputs.env_name }}"
         else
          echo "aws s3 cp deploy-${{ github.sha }}.zip s3://${{ secrets.AWS_BUCKET_NAME }}-${{env.AWS_DEFAULT_REGION}}-${{ steps.branch_check.outputs.env_account }}/ --profile ${{ steps.branch_check.outputs.env_name }}" 

     #run: tar czf deploy.tar.gz * --exclude=./deploy.tar.gz

   #- name: push to S3
   #  run: aws s3 cp deploy-${{ github.sha }}.zip s3://${{env.AWS_BUCKET_NAME}}/ --profile develop

   #- name: Create new ElasticBeanstalk Application Version
     #run: aws elasticbeanstalk create-application-version --application-name ${{envAPPLICATION_NAME}} --source-bundle S3Bucket=${{env.AWS_BUCKET_NAME}},S3Key=deploy-${{ github.sha }}.zip --version-label v-${{ github.sha }} --description testv1 --profile develop --region ${{env.AWS_DEFAULT_REGION}}
    
   #- name: Deploy new App Version
     #run: aws elasticbeanstalk update-environment --application-name ${{envAPPLICATION_NAME}} --environment-name tutorials-env --version-label v-${{ github.sha }} --profile develop --region ${{env.AWS_DEFAULT_REGION}}